###########################
# GENERAL
###########################

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='vim'
fi

# Use vim as $MANPAGER
# https://stackoverflow.com/a/16741577
# https://muru.dev/2015/08/28/vim-for-man.html
export MANPAGER='nvim -c "%! col -b" -c "set ft=man nomod | let &titlestring=$MAN_PN"'

###########################
# ENVIRONMENT VARIABLES
###########################

# Non-destructive setup
mkdir -p ~/env
touch ~/env/local.sh ~/env/sensitive.sh
chmod u+x ~/env/local.sh ~/env/sensitive.sh

# Device-specific environment variables
if [ -f ~/env/local.sh ]; then
    . ~/env/local.sh
fi

# Sensitive environment variables
if [ -f ~/env/sensitive.sh ]; then
    . ~/env/sensitive.sh
fi

# User binaries requiring root access
export PATH="$PATH:/usr/local/sbin"

# Rust
export PATH="$PATH:$HOME/.cargo/bin"
export RUST_BACKTRACE=1
export RUST_LOG=info

# Go
export GOPATH=~/gocode
export PATH=$PATH:$GOPATH/bin

# Ruby - chruby
if [ -f /usr/local/opt/chruby/share/chruby/chruby.sh ]; then
    source /usr/local/opt/chruby/share/chruby/chruby.sh
fi
# Enable auto-switching of Rubies specified by .ruby-version files
if [ -f /usr/local/opt/chruby/share/chruby/auto.sh ]; then
    source /usr/local/opt/chruby/share/chruby/auto.sh
fi
# Use 2.7.2 by default
if [ -x "$(command -v chruby)" ]; then
    chruby ruby-2.7.2
fi

# fzf
# Setup
if [[ ! "$PATH" == */usr/local/opt/fzf/bin* ]]; then
  export PATH="${PATH:+${PATH}:}/usr/local/opt/fzf/bin"
fi
# Auto-completion
[[ $- == *i* ]] && source "/usr/local/opt/fzf/shell/completion.bash" 2> /dev/null
# Key bindings
# source "/usr/local/opt/fzf/shell/key-bindings.bash"
# fzf key bindings - see --bind in :Man fzf (in vim) for details
# FIXME: Doesn't work
# export FZF_DEFAULT_OPTS='--bind ctrl-Ã¥:select-all'

# Use ripgrep for fzf filename searching
if [ -x "$(command -v rg)" ]; then
    export FZF_DEFAULT_COMMAND='rg --files --fixed-strings --ignore-case '\
'--no-ignore --hidden --follow '\
'--glob "!.git/*" --glob "!target/*" '
fi

###########################
# ALIASES
###########################

# Alias definitions. Currently not used
# if [ -f ~/.bash_aliases ]; then
#     . ~/.bash_aliases
# fi

# Git aliases
alias grhsh='git reset --soft HEAD~1'

# Some ls aliases
alias ll='ls -alF'
alias la='ls -a'
alias l='ls -CF'
alias ls='ls -GFh'

# Settings and misc aliases
alias py=python3
alias rmpyc="find ./ -name '*pyc' | xargs rm -f"
alias rmswp="find ./ -name '*swp' | xargs rm -f"

# thefuck alias
if [ -x "$(command -v thefuck)" ]; then
    eval "$(thefuck --alias)"
fi
# Fix for git push --no-verify over --set-upstream until packages are updated
# https://github.com/nvbn/thefuck/issues/1207#issuecomment-864671223
export THEFUCK_PRIORITY="git_hook_bypass=1100"

# cdls and cdl as commands to change directory and list
cdls() { cd "$@" && ls; }
cdl() { cd "$@" && l; }

# commands to update configs
alias clean="source ~/.dotfiles/scripts/clean.sh"
alias to-dotfiles="source ~/.dotfiles/scripts/to-dotfiles.sh"
alias from-dotfiles="source ~/.dotfiles/scripts/from-dotfiles.sh"

# Quickly switch between different environments with $ work <project>
work() { clean && . ~/.dotfiles/scripts/"$@".sh; }

wordcount() { find ~/Obsidian/ -type f -name "*.md" -exec cat '{}' \+ | wc -w; }

# Easy extract
extract () {
  if [ -f $1 ] ; then
      case $1 in
          *.tar.bz2)   tar xvjf $1    ;;
          *.tar.gz)    tar xvzf $1    ;;
          *.bz2)       bunzip2 $1     ;;
          *.rar)       rar x $1       ;;
          *.gz)        gunzip $1      ;;
          *.tar)       tar xvf $1     ;;
          *.tbz2)      tar xvjf $1    ;;
          *.tgz)       tar xvzf $1    ;;
          *.zip)       unzip $1       ;;
          *.Z)         uncompress $1  ;;
          *.7z)        7z x $1        ;;
          *)           echo "don't know how to extract '$1'..." ;;
      esac
  else
      echo "'$1' is not a valid file!"
  fi
}

# batdiff - prettier but less flexible git diff output
bdi() {
    git diff --name-only --diff-filter=d | xargs bat --diff
}

# usage: gerrit [clone] [project]
gerrit() { git $1 ssh://max@gerrit.sigfig.com:2222/$2; }

# Hack for YCM to work
# Removed because it causes LibreSSL to not work when downloading
# packages from crates.io
# export DYLD_FORCE_FLAT_NAMESPACE=1

# Vim
alias vim=nvim

# Ripgrep
alias rgf="rg --files"
alias rgn="rg --no-ignore"
alias rgfn="rg --files --no-ignore"
alias rgnf="rg --files --no-ignore"
# Emulate Silver Searcher's -g filename search somewhat
function rgg { rg --files | rg "$@" }
function rggn { rg --files --no-ignore | rg "$@" }
# To get log/tyche_rCURRENT.log (where log/* is in .gitignore);
# - rggn CURR
# - rgfn | rg CURR
# or just use silver searcher:
# - ag -U -g CURR
# - ag -Ug CURR

# Java
alias javat="java org.junit.runner.JUnitCore"
alias javatest="java org.junit.runner.JUnitCore"

# Git
alias g="git status"
unalias gss # OMZ git status -s

alias ga="git add"

alias gd="git diff"
alias gds="git diff --staged"

function gads { git add "$@"; git diff --staged "$@"; }

alias gch="git checkout"
# This works for both `main` or `master`
function gchm() {
    git checkout `git branch | grep -o -m1 '\b\(master\|main\)\b'`
}

alias gcm="git commit -m"
alias gca="git commit --amend"

alias gp="git push"
alias gpo="git push origin"
alias gpom="git push origin master"

alias gl="git pull"
alias glor="git pull origin"
alias glorm="git pull origin master"
alias glup="git pull upstream"
alias glupm="git pull upstream master"
alias glr="git pull --rebase"
alias glro="git pull --rebase origin"
alias glrom="git pull --rebase origin master"

alias gme="git merge"
alias gmem="git merge master"

alias gs="git stash"
alias gsa="git stash apply"
alias gsd="git stash drop"
alias gsl="git stash list"
alias gsp="git stash pop"
alias gss="git stash show --text"
unalias gstaa # OMZ git stash apply
unalias gstc # OMZ git stash clear
unalias gstd # OMZ git stash drop
unalias gstl # OMZ git stash list
unalias gstp # OMZ git stash pop
unalias gsts # OMZ git stash show --text

alias grm="git rm"

alias gb="git branch"
alias gbr="git branch -r"

alias grb="git rebase --committer-date-is-author-date"
alias grbi="git rebase -i --committer-date-is-author-date"
alias grbc="git rebase --continue"
alias grbs="git rebase --skip"

# alias glo="git log" # Alias in oh-my-zsh's git plugin is better

alias gbl="git blame"

alias grs="git restore"
alias grss="git restore --staged"

alias gsur="git submodule update --recursive"
alias gsuri="git submodule update --recursive --init"

# Python
alias py="python3"
alias py3="python3"
alias python="python3"

# Django
alias pm="python manage.py"

alias pmr="python manage.py runserver -v 2"

alias pms="python manage.py shell -v 2"

alias pmt="python manage.py test -v 2"
alias pmtk="python manage.py test -k -v 2"

alias pmmkm="python manage.py makemigrations -v 2"

alias pmm="python manage.py migrate"
alias pmml="python manage.py migrate --list"
alias pmmfi="python manage.py migrate --fake-initial"

alias pmc="python manage.py check -v 2"

# Pip
alias pip="pip3"
alias pirr="pip install -r requirements.txt"
alias pfr="pip freeze > requirements.txt"

# Ctags
alias ctagshide="ctags -R -f ./.git/tags"
alias ctagsfull="ctags --links=no --exclude='@.gitignore' -R ."

# Lightning Network
alias lncli-alice="lncli --macaroonpath=data/admin.macaroon --rpcserver=localhost:10001"
alias lncli-bob="lncli --macaroonpath=data/admin.macaroon --rpcserver=localhost:10002"
alias lncli-charlie="lncli --macaroonpath=data/admin.macaroon --rpcserver=localhost:10003"

# Cargo / Rust
alias c="cargo"
alias crc="cargo check"
alias crr="cargo run"
alias crrr="cargo run --release"
alias crb="cargo build"
alias crbr="cargo build --release"
alias crf="cargo fmt -- -l"
alias crfa="cargo fmt --all -- -l"
alias crfl="cargo fmt --all -- -l"
alias crfc="cargo fmt --all && cargo clippy --workspace --all-targets"

# Misc
alias lt="ls"
alias sw="sass --watch"
alias ngrok="~/ngrok http 8000 -subdomain=maxfangx"
alias sv="grunt server"
svp() { grunt server --partner=$1; }
alias latexmk='latexmk -pdf -pvc'
alias fucking='sudo'
alias damnshortcuts="rm ~/Library/Preferences/com.apple.symbolichotkeys.plist"
alias cputemp="~/github/osx-cpu-temp/osx-cpu-temp"
alias eutykhia="cargo run" # just for fun
alias tyche="cargo run --release" # just for fun
alias lc="lncli" # lncli is awkward to type in DVORAK
